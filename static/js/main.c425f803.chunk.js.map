{"version":3,"sources":["components/AddBar.js","components/TaskItem.js","components/TaskList.js","components/Heading.js","components/App.js","index.js"],"names":["AddBar","input","setInput","tasks","setTasks","inputRef","useRef","messageRef","className","onSubmit","e","preventDefault","current","value","newTask","id","Math","random","name","completed","style","display","type","placeholder","onChange","target","ref","TaskItem","task","defaultChecked","htmlFor","onClick","setTimeout","map","t","filter","TaskList","filtered","status","renderedList","Heading","onFilterBtnClick","length","App","useState","setStatus","setFiltered","useEffect","getLocalTodos","localStorage","setItem","JSON","stringify","localTodos","parse","getItem","includes","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c425f803.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./styles.scss\";\n\nconst AddBar = ({ input, setInput, tasks, setTasks }) => {\n  const inputRef = useRef();\n  const messageRef = useRef();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!inputRef.current?.value) {\n      messageRef.current.style.display = \"block\";\n      return;\n    }\n    const id = Math.random() * 100000;\n    const newTask = { id, name: input, completed: false };\n    setTasks([...tasks, newTask]);\n    setInput(\"\");\n  };\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n    messageRef.current.style.display = \"none\";\n  };\n\n  return (\n    <div className=\"addbar\">\n      <form onSubmit={onSubmit} className=\"addbar__form\">\n        <input\n          className=\"addbar__text\"\n          type=\"text\"\n          placeholder=\"Add a task\"\n          value={input}\n          onChange={onInputChange}\n          ref={inputRef}\n        />\n        <input className=\"addbar__submit\" type=\"submit\" value=\"+\" />\n      </form>\n      <div className=\"addbar__msg\" ref={messageRef}>\n        <p>Input cannot be empty!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AddBar;\n","import React from \"react\";\n\nconst TaskItem = ({ task, tasks, setTasks }) => {\n  const onCompleted = () => {\n    setTimeout(() => {\n      setTasks(\n        tasks.map((t) => {\n          if (t.id === task.id) {\n            return { ...task, completed: !task.completed };\n          } else {\n            return t;\n          }\n        })\n      );\n    }, 400);\n  };\n\n  const onDelete = () => {\n    setTasks(tasks.filter((t) => t.id !== task.id));\n  };\n\n  return (\n    <div className=\"task-item\">\n      <input\n        type=\"checkbox\"\n        id={`toggle_${task.id}`}\n        defaultChecked={!task.completed ? false : true}\n      />\n      <label\n        className=\"task-item__name\"\n        htmlFor={`toggle_${task.id}`}\n        onClick={onCompleted}\n      >\n        <span className=\"task-item__checkmark\"></span>\n        {task.name}\n      </label>\n      <button className=\"task-item__cross\" onClick={onDelete}>\n        &#10005;\n      </button>\n    </div>\n  );\n};\n\nexport default TaskItem;\n","import React from \"react\";\nimport TaskItem from \"./TaskItem\";\n\nconst TaskList = ({ tasks, setTasks, filtered, status }) => {\n  const renderedList = filtered.map((task) => {\n    return (\n      <TaskItem\n        key={task.id}\n        task={task}\n        tasks={tasks}\n        setTasks={setTasks}\n        status={status}\n      />\n    );\n  });\n\n  return <div className=\"task-list\">{renderedList}</div>;\n};\n\nexport default TaskList;\n","import React from 'react';\n\nconst Heading = ({ filtered, onFilterBtnClick, status }) => {\n  return (\n    <div className=\"todo-list__heading\">\n      <h2>\n        {status === 'todo'\n          ? `ToDo Item (${filtered.length})`\n          : `Completed Item (${filtered.length})`}\n      </h2>\n      <button\n        className={`todo-list__btn ${\n          status === 'todo' ? 'todo-list__btn--todo' : ''\n        }`}\n        onClick={onFilterBtnClick}\n      >\n        {status === 'todo' ? 'Completed Item' : 'Todo Item'}\n      </button>\n    </div>\n  );\n};\n\nexport default Heading;\n","import React, { useState, useEffect } from 'react';\nimport AddBar from './AddBar';\nimport TaskList from './TaskList';\nimport Heading from './Heading';\nimport './styles.scss';\n\nconst App = () => {\n  const [input, setInput] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [status, setStatus] = useState('todo');\n  const [filtered, setFiltered] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    status === 'todo'\n      ? setFiltered(tasks.filter((task) => !task.completed))\n      : setFiltered(tasks.filter((task) => task.completed));\n    localStorage.setItem('todos', JSON.stringify(tasks));\n  }, [tasks, status]);\n\n  const getLocalTodos = () => {\n    const localTodos = JSON.parse(localStorage.getItem('todos'));\n    localTodos ? setTasks(localTodos) : setTasks([]);\n  };\n\n  const onFilterBtnClick = () => {\n    status === 'todo' ? setStatus('completed') : setStatus('todo');\n  };\n\n  const onClearBtnClick = () => {\n    setTasks(tasks.filter((task) => !filtered.includes(task)));\n    setFiltered([]);\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Todo List üìù</h1>\n        {status === 'todo' ? (\n          <AddBar\n            input={input}\n            setInput={setInput}\n            tasks={tasks}\n            setTasks={setTasks}\n          />\n        ) : (\n          ''\n        )}\n      </header>\n      <div className=\"todo-list\">\n        <Heading\n          filtered={filtered}\n          onFilterBtnClick={onFilterBtnClick}\n          status={status}\n        />\n        <TaskList\n          tasks={tasks}\n          setTasks={setTasks}\n          filtered={filtered}\n          status={status}\n        />\n      </div>\n      <div className=\"clear-btn\">\n        {status === 'completed' && filtered.length > 0 ? (\n          <button onClick={onClearBtnClick}>\n            ‚ùå Clear All Completed Tasks\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}